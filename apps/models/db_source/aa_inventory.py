# coding: utf-8
from sqlalchemy import Column, DateTime, Index, Integer, Numeric, String, TIMESTAMP, Unicode, text
from sqlalchemy.dialects.mssql.base import UNIQUEIDENTIFIER
from apps.databases.db_source import source_db


Base = source_db.Model
metadata = Base.metadata


def to_dict(self):
    return {c.name: getattr(self, c.name, None) for c in self.__table__.columns}

Base.to_dict = to_dict
Base.__bind_key__ = 'db_source'


class AAInventory(Base):
    __tablename__ = 'AA_Inventory'
    __table_args__ = (
        Index('_dta_index_AA_Inventory_chenli', 'id', 'idMarketingOrgan'),
        Index('index_AA_Inventory_dta_selectVocher', 'id', 'code', 'name', 'specification', 'idMarketingOrgan'),
        Index('IX_AA_Inventory_Property', 'disabled', 'id', 'isSale', 'IsLaborCost', 'idinventoryclass'),
        Index('Idx_AA_Inventory_IdCode', 'id', 'code', 'name'),
        Index('Idx_AA_Inventory_IdCodeNameProuctInfo', 'id', 'code', 'name', 'productInfo')
    )

    id = Column(UNIQUEIDENTIFIER, primary_key=True, nullable=False, unique=True)
    code = Column(Unicode(32), index=True)
    name = Column(Unicode(200), index=True)
    shorthand = Column(Unicode(50))
    specification = Column(Unicode(200))
    productInfo = Column(UNIQUEIDENTIFIER)
    procureBatch = Column(Numeric(28, 14))
    taxRate = Column(UNIQUEIDENTIFIER)
    invSCost = Column(Numeric(28, 14))
    latestCost = Column(Numeric(28, 14))
    avagCost = Column(Numeric(28, 14))
    isLimitedWithdraw = Column(Integer)
    isBatch = Column(Integer)
    isQualityPeriod = Column(Integer)
    valueType = Column(UNIQUEIDENTIFIER)
    isSale = Column(Integer)
    isMadeSelf = Column(Integer)
    isPurchase = Column(Integer)
    isMaterial = Column(Integer)
    lowQuantity = Column(Numeric(28, 14))
    topQuantity = Column(Numeric(28, 14))
    safeQuantity = Column(Numeric(28, 14))
    picture = Column(Unicode(50))
    disabled = Column(Integer)
    isQualityCheck = Column(Integer)
    idinventoryclass = Column(UNIQUEIDENTIFIER, index=True)
    isMadeRequest = Column(Integer)
    isSingleUnit = Column(Integer)
    idwarehouse = Column(UNIQUEIDENTIFIER, index=True)
    madeDate = Column(String(19, u'Chinese_PRC_CI_AS'))
    ts = Column(TIMESTAMP)
    idinvlocation = Column(UNIQUEIDENTIFIER, index=True)
    updated = Column(String(19, u'Chinese_PRC_CI_AS'))
    idunit = Column(UNIQUEIDENTIFIER, index=True)
    updatedBy = Column(Unicode(32))
    idpartner = Column(UNIQUEIDENTIFIER, index=True)
    idunitgroup = Column(UNIQUEIDENTIFIER, index=True)
    Userfreeitem7 = Column(Integer, server_default=text("(0)"))
    Userfreeitem6 = Column(Integer, server_default=text("(0)"))
    Userfreeitem2 = Column(Integer, server_default=text("(0)"))
    Userfreeitem1 = Column(Integer, server_default=text("(0)"))
    Userfreeitem9 = Column(Integer, server_default=text("(0)"))
    Userfreeitem0 = Column(Integer, server_default=text("(0)"))
    Userfreeitem8 = Column(Integer, server_default=text("(0)"))
    Userfreeitem5 = Column(Integer, server_default=text("(0)"))
    Userfreeitem4 = Column(Integer, server_default=text("(0)"))
    Userfreeitem3 = Column(Integer, server_default=text("(0)"))
    MustInputFreeitem7 = Column(Integer, server_default=text("(0)"))
    MustInputFreeitem2 = Column(Integer, server_default=text("(0)"))
    MustInputFreeitem6 = Column(Integer, server_default=text("(0)"))
    MustInputFreeitem3 = Column(Integer, server_default=text("(0)"))
    MustInputFreeitem5 = Column(Integer, server_default=text("(0)"))
    MustInputFreeitem4 = Column(Integer, server_default=text("(0)"))
    MustInputFreeitem9 = Column(Integer, server_default=text("(0)"))
    MustInputFreeitem1 = Column(Integer, server_default=text("(0)"))
    MustInputFreeitem8 = Column(Integer, server_default=text("(0)"))
    MustInputFreeitem0 = Column(Integer, server_default=text("(0)"))
    produceBatch = Column(Numeric(28, 14))
    idUnitByPurchase = Column(UNIQUEIDENTIFIER, index=True)
    idUnitByStock = Column(UNIQUEIDENTIFIER, index=True)
    idUnitBySale = Column(UNIQUEIDENTIFIER, index=True)
    imageFile = Column(Unicode(500))
    priuserdefnvc1 = Column(Unicode(500))
    priuserdefdecm1 = Column(Numeric(28, 14))
    priuserdefnvc2 = Column(Unicode(500))
    priuserdefdecm2 = Column(Numeric(28, 14))
    priuserdefnvc3 = Column(Unicode(500))
    priuserdefdecm3 = Column(Numeric(28, 14))
    priuserdefnvc4 = Column(Unicode(500))
    priuserdefdecm4 = Column(Numeric(28, 14))
    priuserdefnvc5 = Column(Unicode(500))
    priuserdefdecm5 = Column(Numeric(28, 14))
    standardturnoverdays = Column(Numeric(28, 14))
    HasEverChanged = Column(Unicode(32))
    pickbatch = Column(Numeric(28, 14))
    pickbatchmethod = Column(UNIQUEIDENTIFIER)
    isphantom = Column(Integer)
    planattribute = Column(UNIQUEIDENTIFIER)
    unittype = Column(UNIQUEIDENTIFIER)
    idunitbymanufacture = Column(UNIQUEIDENTIFIER, index=True)
    ControlRangeFreeitem0 = Column(Integer)
    ControlRangeFreeitem1 = Column(Integer)
    ControlRangeFreeitem2 = Column(Integer)
    ControlRangeFreeitem3 = Column(Integer)
    ControlRangeFreeitem4 = Column(Integer)
    ControlRangeFreeitem5 = Column(Integer)
    ControlRangeFreeitem6 = Column(Integer)
    ControlRangeFreeitem7 = Column(Integer)
    ControlRangeFreeitem8 = Column(Integer)
    ControlRangeFreeitem9 = Column(Integer)
    idsku = Column(UNIQUEIDENTIFIER)
    createdTime = Column(String(19, u'Chinese_PRC_CI_AS'))
    IsLaborCost = Column(Integer)
    BatchRunNumber = Column(Numeric(18, 0))
    idMarketingOrgan = Column(UNIQUEIDENTIFIER, index=True)
    IsNew = Column(Integer)
    MadeRecordDate = Column(DateTime)
    InventoryDescript = Column(Unicode(500))
    ReNewGoodSellDays = Column(Integer)
    ReNewGoodAheadDays = Column(Integer)
    IsSuite = Column(Integer)
    idUnitByRetail = Column(UNIQUEIDENTIFIER)
    StoreReplenishmentRule = Column(UNIQUEIDENTIFIER)
    CustomerReplenishmentRule = Column(UNIQUEIDENTIFIER)
    idbarcodesolution = Column(UNIQUEIDENTIFIER)
    IsWeigh = Column(Integer)
    DefaultBarCode = Column(Unicode(200))
    NewProductPeriod = Column(Integer)
    idSubUnitByReport = Column(UNIQUEIDENTIFIER)
    Expired = Column(Integer)
    ExpiredUnit = Column(UNIQUEIDENTIFIER)
